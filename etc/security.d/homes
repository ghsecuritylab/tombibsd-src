#	$NetBSD$

#
# Check home directories.  Directories should not be owned by someone else
# or writable.
#

checkyesno check_homes_permit_usergroups && \
	permit_usergroups=1 || permit_usergroups=0
while read uid homedir; do
	if [ -d ${homedir}/ ] ; then
		file=$(ls -ldgT ${homedir})
		printf -- "$uid $file\n"
	fi
done < $MPBYPATH |
awk -v "usergroups=$permit_usergroups" \
    -v "permit_owners_list=$check_homes_permit_other_owner"  '
     BEGIN {
	split(permit_owners_list, a);
	for (i in a) permit_owners[a[i]]++;
     }
     $1 != $4 && $4 != "root" && !permit_owners[$1] \
	{ print "user " $1 " home directory is owned by " $4 }
     $2 ~ /^d....w/ && (!usergroups || $5 != $1) \
	{ print "user " $1 " home directory is group writable" }
     $2 ~ /^d.......w/ \
	{ print "user " $1 " home directory is other writable" }' \
    > $OUTPUT
if [ -s $OUTPUT ] ; then
	printf "\nChecking home directories.\n"
	cat $OUTPUT
fi

# Files that should not be owned by someone else or readable.
list=".Xauthority .netrc .ssh/id_dsa .ssh/id_rsa .ssh/identity"
while read uid homedir; do
	for f in $list ; do
		file=${homedir}/${f}
		if [ -f $file ] ; then
			printf -- "$uid $f $(ls -ldgT $file)\n"
		fi
	done
done < $MPBYPATH |
awk -v "usergroups=$permit_usergroups" \
    -v "permit_owners_list=$check_homes_permit_other_owner"  '
     BEGIN {
	split(permit_owners_list, a);
	for (i in a) permit_owners[a[i]]++;
     }
     $1 != $5 && $5 != "root" && !permit_owners[$1] \
	{ print "user " $1 " " $2 " file is owned by " $5 }
     $3 ~ /^-...r/ && (!usergroups || $6 != $1) \
	{ print "user " $1 " " $2 " file is group readable" }
     $3 ~ /^-......r/ \
	{ print "user " $1 " " $2 " file is other readable" }
     $3 ~ /^-....w/ && (!usergroups || $6 != $1) \
	{ print "user " $1 " " $2 " file is group writable" }
     $3 ~ /^-.......w/ \
	{ print "user " $1 " " $2 " file is other writable" }' \
    > $OUTPUT

# Files that should not be owned by someone else or writable.
list=".bash_history .bash_login .bash_logout .bash_profile .bashrc \
      .cshrc .emacs .exrc .forward .history .k5login .klogin .login \
      .logout .profile .qmail .rc_history .rhosts .shosts ssh .tcshrc \
      .twmrc .xinitrc .xsession .ssh/authorized_keys \
      .ssh/authorized_keys2 .ssh/config .ssh/id_dsa.pub \
      .ssh/id_rsa.pub .ssh/identity.pub .ssh/known_hosts \
      .ssh/known_hosts2"
while read uid homedir; do
	for f in $list ; do
		file=${homedir}/${f}
		if [ -f $file ] ; then
			printf -- "$uid $f $(ls -ldgT $file)\n"
		fi
	done
done < $MPBYPATH |
awk -v "usergroups=$permit_usergroups" \
    -v "permit_owners_list=$check_homes_permit_other_owner"  '
     BEGIN {
	split(permit_owners_list, a);
	for (i in a) permit_owners[a[i]]++;
     }
     $1 != $5 && $5 != "root" && !permit_owners[$1] \
	{ print "user " $1 " " $2 " file is owned by " $5 }
     $3 ~ /^-....w/ && (!usergroups || $6 != $1) \
	{ print "user " $1 " " $2 " file is group writable" }
     $3 ~ /^-.......w/ \
	{ print "user " $1 " " $2 " file is other writable" }' \
    >> $OUTPUT
if [ -s $OUTPUT ] ; then
	printf "\nChecking dot files.\n"
	cat $OUTPUT
fi
