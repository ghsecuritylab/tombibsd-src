#!/bin/sh -
#
#	$NetBSD$
#	from: @(#)security	8.1 (Berkeley) 6/9/93
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin

rcvar_manpage='security.conf(5)'

if [ -f /etc/rc.subr ]; then
	. /etc/rc.subr
else
	echo "Can't read /etc/rc.subr; aborting."
	exit 1;
fi

umask 077
TZ=UTC; export TZ

if [ -s /etc/security.conf ]; then
	. /etc/security.conf
fi
if [ -s /etc/pkgpath.conf ]; then
	. /etc/pkgpath.conf
fi

# Set reasonable defaults (if they're not set in security.conf)
#
backup_dir=${backup_dir:-/var/backups}
max_loginlen=${max_loginlen:-8}
max_grouplen=${max_grouplen:-8}
pkg_admin=${pkg_admin:-/usr/sbin/pkg_admin}
pkg_info=${pkg_info:-/usr/sbin/pkg_info}

# Other configurable variables
#
special_files="/etc/mtree/special /etc/mtree/special.local"
MP=/etc/master.passwd
CHANGELIST=""
work_dir=$backup_dir/work

if [ ! -d "$work_dir" ]; then
	mkdir -p "$work_dir"
fi

SECUREDIR=$(mktemp -d -t _securedir) || exit 1

trap "/bin/rm -rf $SECUREDIR ; exit 0" EXIT INT QUIT PIPE

if ! cd "$SECUREDIR"; then
	echo "Can not cd to $SECUREDIR".
	exit 1
fi

ERR=err.$$
TMP1=tmp1.$$
TMP2=tmp2.$$
MPBYUID=mpbyuid.$$
MPBYPATH=mpbypath.$$
LIST=list.$$
OUTPUT=output.$$
LABELS=labels.$$
LVM_LABELS=lvm.$$
PKGS=pkgs.$$
CHANGEFILES=changefiles.$$
SPECIALSPEC=specialspec.$$

if [ -n "${pkgdb_dir}" ]; then
    echo "WARNING: Setting pkgdb_dir in security.conf(5) is deprecated"
    echo "WARNING: Please define PKG_DBDIR in pkg_install.conf(5) instead"
    _compat_K_flag="-K ${pkgdb_dir}"
fi

. /etc/security.subr

# These are used several times.
#
awk -F: '!/^\+/ { print $1 " " $3 }' $MP | sort -k2n > $MPBYUID
awk -F: '{ print $1 " " $9 }' $MP | sort -k2 > $MPBYPATH
for file in $special_files; do
	[ -s $file ] && cat $file
done | mtree -CM -k all > $SPECIALSPEC || exit 1


# Check the master password file syntax.
#
if checkyesno check_passwd; then
	. /etc/security.d/passwd
fi

# Check the group file syntax.
#
if checkyesno check_group; then
	. /etc/security.d/group
fi

# Check for root paths, umask values in startup files.
# The check for the root paths is problematical -- it's likely to fail
# in other environments.  Once the shells have been modified to warn
# of '.' in the path, the path tests should go away.
#
if checkyesno check_rootdotfiles; then
	. /etc/security.d/rootdotfiles
fi

# Root and uucp should both be in /etc/ftpusers.
#
if checkyesno check_ftpusers; then
	. /etc/security.d/ftpusers
fi

# Uudecode should not be in the /etc/mail/aliases file.
#
if checkyesno check_aliases; then
	. /etc/security.d/aliases
fi

# Files that should not have + signs.
#
if checkyesno check_rhosts; then
	. /etc/security.d/rhosts
fi

# Check home directories.  Directories should not be owned by someone else
# or writable.
#
if checkyesno check_homes; then
	. /etc/security.d/homes
fi

# Mailboxes should be owned by user and unreadable.
#
if checkyesno check_varmail; then
	. /etc/security.d/varmail
fi

# NFS exports shouldn't be globally exported
#
if checkyesno check_nfs && [ -f /etc/exports ]; then
	. /etc/security.d/nfs
fi

# Display any changes in setuid files and devices.
#
if checkyesno check_devices; then
	. /etc/security.d/devices
fi

# Check special files.
# Check system binaries.
#
# Create the mtree tree specifications using:
#	mtree -cx -pDIR -kmd5,uid,gid,mode,nlink,size,link,time > DIR.secure
#	chown root:wheel DIR.secure
#	chmod u+r,go= DIR.secure
#
# Note, this is not complete protection against Trojan horsed binaries, as
# the hacker can modify the tree specification to match the replaced binary.
# For details on really protecting yourself against modified binaries, see
# the mtree(8) manual page.
#
if checkyesno check_mtree; then
	. /etc/security.d/mtree
fi

# Backup disklabels of available disks
#
if checkyesno check_disklabels; then
	. /etc/security.d/disklabels
fi

if checkyesno check_lvm; then
	. /etc/security.d/lvm
fi

# Check for changes in the list of installed pkgs
#
if checkyesno check_pkgs && have_pkgs; then
	. /etc/security.d/pkgs
fi

# List of files that get backed up and checked for any modifications.
# Any changes cause the files to rotate.
#
if checkyesno check_changelist ; then
	. /etc/security.d/changelist
fi

# Special case backups, including the master password file and
# ssh private host keys. The normal backup mechanisms for
# $check_changelist (see below) also print out the actual file
# differences and we don't want to do that for these files
#
. /etc/security.d/backup

if have_pkgs; then
	if checkyesno check_pkg_vulnerabilities; then
		${pkg_admin} ${_compat_K_flag} audit >${OUTPUT} 2>&1
		if [ -s ${OUTPUT} ]; then
			printf "\nInstalled vulnerable packages:\n"
			cat ${OUTPUT}
		fi
	fi

	if checkyesno check_pkg_signatures; then
		${pkg_admin} ${_compat_K_flag} check >${OUTPUT} 2>&1
		if [ $? -ne 0 ]; then
			printf "\nFiles with invalid signatures:\n"
			cat ${OUTPUT}
		fi
	fi
fi

. /etc/security.d/local
