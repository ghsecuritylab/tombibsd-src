#	$NetBSD$

#
#	defaults
#

additem defaults "/etc/defaults/ being up to date"
do_defaults()
{
	[ -n "$1" ] || err 3 "USAGE: do_defaults  fix|check"
	op="$1"
	failed=0

	# Except for i386 and amd64, rc.conf(5) should be the same as the
	# one obtained from a source directory
	extra_scripts="rc.conf"
	if [ "$MACHINE" = "i386" -o "$MACHINE" = "amd64" ]; then
		if $SOURCEMODE; then
			extra_scripts=	# clear

			# Generate and compare the correct rc.conf(5) file
			mkdir "${SCRATCHDIR}/defaults"

			cat "${SRC_DIR}/etc/defaults/rc.conf" \
			    "${SRC_DIR}/etc/etc.${MACHINE}/rc.conf.append" \
			    > "${SCRATCHDIR}/defaults/rc.conf"

			compare_dir "${op}" "${SCRATCHDIR}/defaults" \
			    "${DEST_DIR}/etc/defaults" \
			    444 \
			    "rc.conf"
			failed=$(( ${failed} + $? ))
		fi
	fi

	compare_dir "$op" "${SRC_DIR}/etc/defaults" "${DEST_DIR}/etc/defaults" \
		444 \
		daily.conf monthly.conf pkgpath.conf security.conf \
		weekly.conf ${extra_scripts}
	failed=$(( ${failed} + $? ))

	find_file_in_dirlist pf.boot.conf "pf.boot.conf" \
	    "${SRC_DIR}/usr.sbin/pf/etc/defaults" "${SRC_DIR}/etc/defaults" \
	    || return 1
			# ${dir} is set by find_file_in_dirlist()
	compare_dir "$op" "${dir}" "${DEST_DIR}/etc/defaults" 444 pf.boot.conf
	failed=$(( ${failed} + $? ))

	return ${failed}
}
